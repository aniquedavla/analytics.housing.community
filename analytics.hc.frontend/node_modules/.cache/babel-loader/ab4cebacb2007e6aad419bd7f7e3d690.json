{"ast":null,"code":"var _jsxFileName = \"/Users/aniquedavla/Projects/analytics.hc/analytics.hc.frontend/src/App.js\";\nimport React, { Component } from 'react';\nimport logo from \"./logo.svg\";\nimport { BrowserRouter, Route, Switch } from \"react-router-dom\";\nimport './App.css';\nimport Title from './Title';\nimport CommunityData from './CommunityData';\nimport WorkingTest from './WorkingTest';\nimport Dashboard from './Components/Dashboard'; // import Dashboard from './Dashboard';\n\nclass App extends Component {\n  constructor(props) {\n    super(props);\n\n    this.getCommunitiesData = () => {\n      return fetch('http://my-json-server.typicode.com/aniquedavla/demo/communities').then(response => response.json());\n    };\n\n    this.state = {\n      communities: [],\n      highLevelData: {},\n      isLoaded: false\n    };\n  }\n\n  async componentDidMount() {\n    const getCommunities = await fetch(\"http://my-json-server.typicode.com/aniquedavla/demo/communities\");\n    const communitiesJson = await getCommunities.json;\n    const getHighLevelData = await fetch(\"http://my-json-server.typicode.com/aniquedavla/demo/highLevelData\");\n    const highLevelDataJson = await getHighLevelData.json;\n    console.log(communitiesJson, highLevelDataJson);\n    this.setState({\n      communities: communitiesJson,\n      highLevelData: highLevelDataJson,\n      isLoaded: true\n    });\n  } // Promise.all([\n  //   fetch(\"http://my-json-server.typicode.com/aniquedavla/demo/communities\"),\n  //   fetch(\"http://my-json-server.typicode.com/aniquedavla/demo/highLevelData\"),\n  // ]).then(([communities, highLevelData]) => {\n  //     console.log(communities, highLevelData)\n  //     this.setState({\n  //       communities: communities.json,\n  //       highLevelData: highLevelData.json,\n  //       isLoaded: true\n  //     });\n  // })\n  // fetch('http://my-json-server.typicode.com/aniquedavla/demo/communities')\n  //     .then(response => response.json())\n  //     .then(json => this.setState({\n  //         communities: json,\n  //         isLoaded: true\n  //     }));\n  // fetch('http://my-json-server.typicode.com/aniquedavla/demo/highLevelData')\n  // .then(response => response.json())\n  // .then(highLevelJson => this.setState({\n  //     highLevelData: highLevelJson,\n  //     isLoaded: true\n  // }));\n\n\n  render() {\n    let {\n      isLoaded,\n      communities,\n      highLevelData\n    } = this.state;\n    console.log(this.state);\n\n    if (isLoaded) {\n      return /*#__PURE__*/React.createElement(\"div\", {\n        className: \"App\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 69,\n          columnNumber: 9\n        }\n      }, /*#__PURE__*/React.createElement(BrowserRouter, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 70,\n          columnNumber: 11\n        }\n      }, /*#__PURE__*/React.createElement(Switch, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 71,\n          columnNumber: 13\n        }\n      }, /*#__PURE__*/React.createElement(Route, {\n        path: \"/\",\n        component: WorkingTest,\n        exact: true,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 72,\n          columnNumber: 15\n        }\n      }))));\n    } else {\n      return /*#__PURE__*/React.createElement(\"div\", {\n        className: \"App\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 80,\n          columnNumber: 9\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 81,\n          columnNumber: 9\n        }\n      }, \"Loading community data...\"));\n    }\n  }\n\n}\n\nexport default App;","map":{"version":3,"sources":["/Users/aniquedavla/Projects/analytics.hc/analytics.hc.frontend/src/App.js"],"names":["React","Component","BrowserRouter","Route","Switch","Title","CommunityData","WorkingTest","Dashboard","App","constructor","props","getCommunitiesData","fetch","then","response","json","state","communities","highLevelData","isLoaded","componentDidMount","getCommunities","communitiesJson","getHighLevelData","highLevelDataJson","console","log","setState","render"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;;AAEA,SAAQC,aAAR,EAAuBC,KAAvB,EAA8BC,MAA9B,QAA2C,kBAA3C;AACA,OAAO,WAAP;AACA,OAAOC,KAAP,MAAkB,SAAlB;AACA,OAAOC,aAAP,MAA0B,iBAA1B;AACA,OAAOC,WAAP,MAAwB,eAAxB;AACA,OAAOC,SAAP,MAAsB,wBAAtB,C,CACA;;AAGA,MAAMC,GAAN,SAAkBR,SAAlB,CAA4B;AAC1BS,EAAAA,WAAW,CAACC,KAAD,EAAO;AACZ,UAAMA,KAAN;;AADY,SA8ClBC,kBA9CkB,GA8CG,MAAK;AACxB,aAAOC,KAAK,CAAC,iEAAD,CAAL,CACAC,IADA,CACKC,QAAQ,IAAIA,QAAQ,CAACC,IAAT,EADjB,CAAP;AAGD,KAlDiB;;AAEZ,SAAKC,KAAL,GAAa;AACTC,MAAAA,WAAW,EAAC,EADH;AAETC,MAAAA,aAAa,EAAC,EAFL;AAGTC,MAAAA,QAAQ,EAAC;AAHA,KAAb;AAKL;;AAED,QAAMC,iBAAN,GAAyB;AACvB,UAAMC,cAAc,GAAG,MAAMT,KAAK,CAAC,iEAAD,CAAlC;AACA,UAAMU,eAAe,GAAG,MAAMD,cAAc,CAACN,IAA7C;AACA,UAAMQ,gBAAgB,GAAG,MAAMX,KAAK,CAAC,mEAAD,CAApC;AACA,UAAMY,iBAAiB,GAAG,MAAMD,gBAAgB,CAACR,IAAjD;AACIU,IAAAA,OAAO,CAACC,GAAR,CAAYJ,eAAZ,EAA6BE,iBAA7B;AACA,SAAKG,QAAL,CAAc;AACZV,MAAAA,WAAW,EAAEK,eADD;AAEZJ,MAAAA,aAAa,EAAEM,iBAFH;AAGZL,MAAAA,QAAQ,EAAE;AAHE,KAAd;AAKH,GArBuB,CAsBxB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAOJS,EAAAA,MAAM,GAAE;AACN,QAAI;AAACT,MAAAA,QAAD;AAAWF,MAAAA,WAAX;AAAwBC,MAAAA;AAAxB,QAAyC,KAAKF,KAAlD;AACAS,IAAAA,OAAO,CAACC,GAAR,CAAY,KAAKV,KAAjB;;AACA,QAAGG,QAAH,EAAY;AACV,0BACE;AAAK,QAAA,SAAS,EAAC,KAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBACE,oBAAC,aAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBACE,oBAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBACE,oBAAC,KAAD;AAAO,QAAA,IAAI,EAAC,GAAZ;AAAgB,QAAA,SAAS,EAAEb,WAA3B;AAAwC,QAAA,KAAK,MAA7C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADF,CADF,CADF,CADF;AAUD,KAXD,MAWO;AACL,0BACE;AAAK,QAAA,SAAS,EAAC,KAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qCADA,CADF;AAWD;AACF;;AA/EyB;;AAiF5B,eAAeE,GAAf","sourcesContent":["import React, { Component } from 'react';\nimport logo from './logo.svg';\nimport {BrowserRouter, Route, Switch} from \"react-router-dom\";\nimport './App.css';\nimport Title from './Title';\nimport CommunityData from './CommunityData';\nimport WorkingTest from './WorkingTest';\nimport Dashboard from './Components/Dashboard';\n// import Dashboard from './Dashboard';\n\n\nclass App extends Component {\n  constructor(props){\n        super(props)\n        this.state = {\n            communities:[],\n            highLevelData:{},\n            isLoaded:false\n        }\n  }\n  \n  async componentDidMount(){\n    const getCommunities = await fetch(\"http://my-json-server.typicode.com/aniquedavla/demo/communities\")\n    const communitiesJson = await getCommunities.json  \n    const getHighLevelData = await fetch(\"http://my-json-server.typicode.com/aniquedavla/demo/highLevelData\")\n    const highLevelDataJson = await getHighLevelData.json\n        console.log(communitiesJson, highLevelDataJson)\n        this.setState({\n          communities: communitiesJson,\n          highLevelData: highLevelDataJson,\n          isLoaded: true\n        });\n    }\n    // Promise.all([\n    //   fetch(\"http://my-json-server.typicode.com/aniquedavla/demo/communities\"),\n    //   fetch(\"http://my-json-server.typicode.com/aniquedavla/demo/highLevelData\"),\n    // ]).then(([communities, highLevelData]) => {\n    //     console.log(communities, highLevelData)\n    //     this.setState({\n    //       communities: communities.json,\n    //       highLevelData: highLevelData.json,\n    //       isLoaded: true\n    //     });\n    // })\n  \n      // fetch('http://my-json-server.typicode.com/aniquedavla/demo/communities')\n      //     .then(response => response.json())\n      //     .then(json => this.setState({\n      //         communities: json,\n      //         isLoaded: true\n      //     }));\n      // fetch('http://my-json-server.typicode.com/aniquedavla/demo/highLevelData')\n      // .then(response => response.json())\n      // .then(highLevelJson => this.setState({\n      //     highLevelData: highLevelJson,\n      //     isLoaded: true\n      // }));\n  \n  getCommunitiesData = ()=> {\n    return fetch('http://my-json-server.typicode.com/aniquedavla/demo/communities')\n          .then(response => response.json())\n        \n  } \n  render(){\n    let {isLoaded, communities, highLevelData} = this.state\n    console.log(this.state);\n    if(isLoaded){\n      return (\n        <div className=\"App\">\n          <BrowserRouter>\n            <Switch>\n              <Route path=\"/\" component={WorkingTest} exact />\n              {/* <Route path=\"/dashboard\" component={()=><Dashboard communities={communities, highLevelData}></Dashboard>} exact /> */}\n            </Switch> \n          </BrowserRouter>\n        </div>\n      );\n    } else {\n      return (\n        <div className=\"App\">\n        <div>Loading community data...</div>\n          {/* <BrowserRouter>\n            <Switch>\n              <Route path=\"/\" component={WorkingTest} exact />\n              <Route path=\"/dashboard\" component={Dashboard} exact />\n            </Switch>\n          </BrowserRouter> */}\n        </div>\n      );\n    }\n  }\n}\nexport default App;\n"]},"metadata":{},"sourceType":"module"}