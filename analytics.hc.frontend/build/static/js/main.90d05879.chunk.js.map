{"version":3,"sources":["logo.svg","Title.js","CommunityData.jsx","WorkingTest.jsx","Components/Title.js","Components/UsersChart.jsx","Components/CommunityTable.jsx","Components/HighLevelList.jsx","Components/Dashboard.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","Title","className","color","CommunityData","props","state","communities","isLoaded","fetch","then","response","json","setState","this","map","aCommunity","key","id","name","Component","Typography","component","variant","gutterBottom","children","UsersChart","newUsersByMonth","console","log","Fragment","data","margin","top","right","bottom","left","dataKey","angle","position","style","textAnchor","type","dot","React","useStyles","makeStyles","theme","seeMore","marginTop","spacing","CommunityTable","Table","size","TableHead","TableRow","TableCell","TableBody","community","dateCreated","numberOfListings","averageRent","lowRent","highRent","HighLevelList","highLevelData","List","ListItem","ListItemText","primary","numberOfCommunities","totalNumberOfListings","totalRegisteredUsers","totalPageViews","root","display","toolbar","paddingRight","toolbarIcon","alignItems","justifyContent","padding","mixins","menuButton","marginRight","menuButtonHidden","title","flexGrow","drawerPaper","whiteSpace","width","transition","transitions","create","easing","sharp","duration","enteringScreen","drawerPaperClose","overflowX","leavingScreen","breakpoints","up","appBarSpacer","content","height","overflow","container","paddingTop","paddingBottom","paper","flexDirection","fixedHeight","Dashboard","classes","useState","fixedHeightPaper","clsx","CssBaseline","AppBar","appBar","Toolbar","noWrap","Container","maxWidth","Grid","item","xs","md","lg","Paper","App","path","exact","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister","catch","error","message"],"mappings":"qLAAAA,EAAOC,QAAU,IAA0B,kC,sKCU5BC,G,OAPD,kBAEZ,6BACE,wBAAIC,UAAU,aAAaC,MAAM,WAAjC,oCCsCWC,E,kDAzCX,WAAYC,GAAO,IAAD,8BACd,cAAMA,IACDC,MAAQ,CACTC,YAAY,GACZC,UAAS,GAJC,E,gEAQE,IAAD,OACfC,MAAM,mEACDC,MAAK,SAAAC,GAAQ,OAAIA,EAASC,UAC1BF,MAAK,SAAAE,GAAI,OAAI,EAAKC,SAAS,CACxBN,YAAaK,EACbJ,UAAU,S,+BAIb,IAAD,EAC0BM,KAAKR,MAA9BE,EADD,EACCA,SAAUD,EADX,EACWA,YACf,OAAGC,EAEK,6BACI,8CACA,4BACKD,EAAYQ,KAAI,SAAAC,GAAU,OACvB,uBAAGC,IAAKD,EAAWE,IAAKF,EAAWG,WAQ/C,8D,GAlCYC,a,GCGFA,Y,uGCDX,SAASnB,EAAMI,GAC5B,OACE,kBAACgB,EAAA,EAAD,CAAYC,UAAU,KAAKC,QAAQ,KAAKpB,MAAM,UAAUqB,cAAY,GACjEnB,EAAMoB,U,YCyDEC,E,kDA1Db,WAAYrB,GAAO,IAAD,8BAChB,cAAMA,IACDC,MAAQ,CACXqB,gBAAgB,GAChBnB,UAAS,GAJK,E,gEAOE,IAAD,OAEjBC,MADiB,uCAEVC,MAAK,SAAAC,GAAQ,OAAIA,EAASC,UAC1BF,MAAK,SAAAE,GAAI,OAAI,EAAKC,SAAS,CACxBc,gBAAiBf,EACjBJ,UAAU,S,+BAKpB,OADAoB,QAAQC,IAAIf,KAAKR,MAAMqB,iBACpBb,KAAKR,MAAME,SAEV,kBAAC,IAAMsB,SAAP,KACE,kBAAC,EAAD,0BACA,kBAAC,IAAD,KACE,kBAAC,IAAD,CACEC,KAAMjB,KAAKR,MAAMqB,gBACjBK,OAAQ,CACNC,IAAK,GACLC,MAAO,GACPC,OAAQ,EACRC,KAAM,KAGR,kBAAC,IAAD,CAAOC,QAAQ,UAEf,kBAAC,IAAD,KACE,kBAAC,IAAD,CACEC,MAAO,IACPC,SAAS,OACTC,MAAO,CAAEC,WAAY,WAHvB,sBAQF,kBAAC,IAAD,CAAMC,KAAK,WAAWL,QAAQ,SAASM,KAAK,OAOhD,6BACE,kBAAC,EAAD,0BADF,kB,GAnDeC,IAAMxB,W,6CCU/B,IAAMyB,EAAYC,aAAW,SAACC,GAAD,MAAY,CACvCC,QAAS,CACPC,UAAWF,EAAMG,QAAQ,QAyCdC,EAtCQ,SAAC,GAAmB,IAAlB5C,EAAiB,EAAjBA,YACPsC,IAEhB,OADAjB,QAAQC,IAAItB,GAEV,kBAAC,IAAMuB,SAAP,KACE,kBAAC,EAAD,0CACA,kBAACsB,EAAA,EAAD,CAAOC,KAAK,SACV,kBAACC,EAAA,EAAD,KACE,kBAACC,EAAA,EAAD,KACE,kBAACC,EAAA,EAAD,uBACA,kBAACA,EAAA,EAAD,qBACA,kBAACA,EAAA,EAAD,2BACA,kBAACA,EAAA,EAAD,qBACA,kBAACA,EAAA,EAAD,oBACA,kBAACA,EAAA,EAAD,uBAGJ,kBAACC,EAAA,EAAD,KACGlD,EAAYQ,KAAI,SAAC2C,GAAD,OACf,kBAACH,EAAA,EAAD,CAAUtC,IAAKyC,EAAUxC,IACvB,kBAACsC,EAAA,EAAD,KAAYE,EAAUvC,MACtB,kBAACqC,EAAA,EAAD,KAAYE,EAAUC,aACtB,kBAACH,EAAA,EAAD,KAAaE,EAAUE,kBACvB,kBAACJ,EAAA,EAAD,KAAaE,EAAUG,aACvB,kBAACL,EAAA,EAAD,KAAaE,EAAUI,SACvB,kBAACN,EAAA,EAAD,KAAaE,EAAUK,kB,2BCUtBC,E,kDAlDX,WAAY3D,GAAO,IAAD,8BACd,cAAMA,IACDC,MAAQ,CACT2D,cAAe,GACfzD,UAAU,GAJA,E,gEAOE,IAAD,OACfC,MAAM,0CACCC,MAAK,SAAAC,GAAQ,OAAIA,EAASC,UAC1BF,MAAK,SAAAE,GAAI,OAAI,EAAKC,SAAS,CACxBoD,cAAerD,EACfJ,UAAU,S,+BAIpB,OAAGM,KAAKR,MAAME,SAEN,6BACI,kBAAC,EAAD,wBACA,kBAAC0D,EAAA,EAAD,KACI,kBAACC,EAAA,EAAD,KACA,kBAACC,EAAA,EAAD,CAAcC,QAAS,2BACtBvD,KAAKR,MAAM2D,cAAcK,qBAE1B,kBAACH,EAAA,EAAD,KACA,kBAACC,EAAA,EAAD,CAAcC,QAAQ,8BACrBvD,KAAKR,MAAM2D,cAAcM,uBAE1B,kBAACJ,EAAA,EAAD,KACA,kBAACC,EAAA,EAAD,CAAcC,QAAQ,4BACrBvD,KAAKR,MAAM2D,cAAcO,sBAE1B,kBAACL,EAAA,EAAD,KACA,kBAACC,EAAA,EAAD,CAAcC,QAAQ,sBACrBvD,KAAKR,MAAM2D,cAAcQ,kBAOlC,6BACA,kBAAC,EAAD,wBACA,kBAACP,EAAA,EAAD,wB,GA7CYtB,IAAMxB,WC4B5ByB,EAAYC,aAAW,SAACC,GAAD,MAAY,CACvC2B,KAAM,CACJC,QAAS,QAEXC,QAAS,CACPC,aAAc,IAEhBC,YAAY,aACVH,QAAS,OACTI,WAAY,SACZC,eAAgB,WAChBC,QAAS,SACNlC,EAAMmC,OAAON,SAElBO,WAAY,CACVC,YAAa,IAEfC,iBAAkB,CAChBV,QAAS,QAEXW,MAAO,CACLC,SAAU,GAEZC,YAAa,CACXjD,SAAU,WACVkD,WAAY,SACZC,MA5BgB,IA6BhBC,WAAY5C,EAAM6C,YAAYC,OAAO,QAAS,CAC5CC,OAAQ/C,EAAM6C,YAAYE,OAAOC,MACjCC,SAAUjD,EAAM6C,YAAYI,SAASC,kBAGzCC,iBAAiB,aACfC,UAAW,SACXR,WAAY5C,EAAM6C,YAAYC,OAAO,QAAS,CAC5CC,OAAQ/C,EAAM6C,YAAYE,OAAOC,MACjCC,SAAUjD,EAAM6C,YAAYI,SAASI,gBAEvCV,MAAO3C,EAAMG,QAAQ,IACpBH,EAAMsD,YAAYC,GAAG,MAAQ,CAC5BZ,MAAO3C,EAAMG,QAAQ,KAGzBqD,aAAcxD,EAAMmC,OAAON,QAC3B4B,QAAS,CACPjB,SAAU,EACVkB,OAAQ,QACRC,SAAU,QAEZC,UAAW,CACTC,WAAY7D,EAAMG,QAAQ,GAC1B2D,cAAe9D,EAAMG,QAAQ,IAE/B4D,MAAO,CACL7B,QAASlC,EAAMG,QAAQ,GACvByB,QAAS,OACT+B,SAAU,OACVK,cAAe,UAEjBC,YAAa,CACXP,OAAQ,SAmDGQ,EA/CI,SAAC,GAAkC,IAAjC1G,EAAgC,EAAhCA,YAAgC,EAAnB0D,cAChCrC,QAAQC,IAAItB,GACZ,IAAM2G,EAAUrE,IAFmC,EAG3BD,IAAMuE,UAAS,GAHY,mBAU7CC,GAV6C,UAU1BC,YAAKH,EAAQJ,MAAOI,EAAQF,cAErD,OACE,yBAAK9G,UAAWgH,EAAQxC,MACtB,kBAAC4C,EAAA,EAAD,MACA,kBAACC,EAAA,EAAD,CAAQhF,SAAS,WAAWrC,UAAWmH,YAAKH,EAAQM,SAClD,kBAACC,EAAA,EAAD,CAASvH,UAAWgH,EAAQtC,SAC1B,kBAACvD,EAAA,EAAD,CAAYC,UAAU,KAAKC,QAAQ,KAAKpB,MAAM,UAAUuH,QAAM,EAACxH,UAAWgH,EAAQ5B,OAAlF,mCAKJ,0BAAMpF,UAAWgH,EAAQV,SACvB,yBAAKtG,UAAWgH,EAAQX,eACxB,kBAACoB,EAAA,EAAD,CAAWC,SAAS,KAAK1H,UAAWgH,EAAQP,WAC1C,kBAACkB,EAAA,EAAD,CAAMlB,WAAS,EAACzD,QAAS,GACvB,kBAAC2E,EAAA,EAAD,CAAMC,MAAI,EAACC,GAAI,GAAIC,GAAI,EAAGC,GAAI,GAC5B,kBAACC,EAAA,EAAD,CAAOhI,UAAWkH,GAChB,kBAAC,EAAD,QAGJ,kBAACS,EAAA,EAAD,CAAMC,MAAI,EAACC,GAAI,GAAIC,GAAI,EAAGC,GAAI,GAC5B,kBAACC,EAAA,EAAD,CAAOhI,UAAWkH,GAChB,kBAAC,EAAD,QAGJ,kBAACS,EAAA,EAAD,CAAMC,MAAI,EAACC,GAAI,IACb,kBAACG,EAAA,EAAD,CAAOhI,UAAWgH,EAAQJ,OACxB,kBAAC,EAAD,CAAgBvG,YAAaA,WC9E9B4H,E,kDA5Cb,WAAY9H,GAAO,IAAD,8BACZ,cAAMA,IACDC,MAAQ,CACTC,YAAY,GACZC,UAAS,GAJD,E,gEAQE,IAAD,OACjBC,MAAM,wCACCC,MAAK,SAAAC,GAAQ,OAAIA,EAASC,UAC1BF,MAAK,SAAAE,GAAI,OAAI,EAAKC,SAAS,CACxBN,YAAaK,EACbJ,UAAU,S,+BAGb,IAAD,EACwBM,KAAKR,MAA9BE,EADC,EACDA,SAAUD,EADT,EACSA,YAEf,OADAqB,QAAQC,IAAIf,KAAKR,OACdE,EAEC,yBAAKN,UAAU,OACb,kBAAC,IAAD,KACE,kBAAC,IAAD,KACE,kBAAC,IAAD,CAAOkI,KAAK,IAAI9G,UAAW,kBAAI,kBAAC,EAAD,CAAWf,YAAaA,KAA2B8H,OAAK,OAO7F,yBAAKnI,UAAU,OACf,+D,GAjCUkB,aCCEkH,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,2DCZNC,IAASC,OACP,kBAAC,IAAMC,WAAP,KACE,kBAAC,EAAD,OAEFC,SAASC,eAAe,SDyHpB,kBAAmBC,WACrBA,UAAUC,cAAcC,MACrBxI,MAAK,SAAAyI,GACJA,EAAaC,gBAEdC,OAAM,SAAAC,GACL1H,QAAQ0H,MAAMA,EAAMC,c","file":"static/js/main.90d05879.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/logo.5d5d9eef.svg\";","import React from 'react';\n\n\nconst Title = () => (\n\n  <div>\n    <h2 className=\"titleColor\" color=\"#3f51b5\">Analytics - housing.community</h2>\n  </div>\n\n);\nexport default Title;\n","import React, { Component } from 'react';\n\nclass CommunityData extends Component{\n    constructor(props){\n        super(props)\n        this.state = {\n            communities:[],\n            isLoaded:false\n        }\n    }\n\n    componentDidMount(){\n        fetch('http://my-json-server.typicode.com/aniquedavla/demo/communities')\n            .then(response => response.json())\n            .then(json => this.setState({\n                communities: json,\n                isLoaded: true\n            }))\n    }\n\n    render(){\n        let {isLoaded, communities} = this.state\n        if(isLoaded){\n            return(\n                <div>\n                    <h2>Community Data</h2>\n                    <ul>\n                        {communities.map(aCommunity =>(\n                            <p key={aCommunity.id}>{aCommunity.name}</p> \n                        ))\n                        }\n                    </ul>\n                </div> \n            );        \n        } else {\n            return(\n                <div>Loading community data...</div>\n                \n            );\n        }\n        \n    }\n}\n\nexport default CommunityData","import React from 'react';\nimport { Component } from \"react\";\nimport Title from './Title';\nimport CommunityData from './CommunityData';\n\nclass WorkingTest extends Component{\n    render(){\n        return(\n        <div className=\"App\"> \n            <Title></Title>\n            <CommunityData/>\n        </div>\n        )\n    }\n}\nexport default WorkingTest","import React from 'react';\nimport PropTypes from 'prop-types';\nimport Typography from '@material-ui/core/Typography';\n\nexport default function Title(props) {\n  return (\n    <Typography component=\"h2\" variant=\"h6\" color=\"primary\" gutterBottom>\n      {props.children}\n    </Typography>\n  );\n}\n\nTitle.propTypes = {\n  children: PropTypes.node,\n};","import React from 'react';\nimport { useTheme } from '@material-ui/core/styles';\nimport { LineChart, Line, XAxis, YAxis, Label, ResponsiveContainer } from 'recharts';\nimport Title from './Title';\n\nclass UsersChart extends React.Component {\n  constructor(props){\n    super(props)\n    this.state = {\n      newUsersByMonth:[],\n      isLoaded:false\n    }\n  }\n  componentDidMount(){\n    const usersUrl = \"http://34.70.95.142:8080/numOfUsers\";\n    fetch(usersUrl)\n          .then(response => response.json())\n          .then(json => this.setState({\n              newUsersByMonth: json,\n              isLoaded: true\n    }));\n  }\n  render(){\n    console.log(this.state.newUsersByMonth);\n    if(this.state.isLoaded){\n      return (\n        <React.Fragment>\n          <Title>New users in 2021</Title>\n          <ResponsiveContainer>\n            <LineChart\n              data={this.state.newUsersByMonth}\n              margin={{\n                top: 10,\n                right: 10,\n                bottom: 0,\n                left: 16,\n              }}\n            >\n              <XAxis dataKey=\"month\" >\n              </XAxis>\n              <YAxis >\n                <Label\n                  angle={270}\n                  position=\"left\"\n                  style={{ textAnchor: 'middle'}}\n                >\n                Users (thousands)\n                </Label>\n              </YAxis>\n              <Line type=\"monotone\" dataKey=\"amount\" dot={true} />\n            </LineChart>\n          </ResponsiveContainer>\n        </React.Fragment>\n      );\n    } else {\n        return(\n          <div>\n            <Title>New users in 2021</Title>\n            loading...\n          </div>\n        )\n    }\n  }\n}\nexport default UsersChart","import React from 'react';\nimport Link from '@material-ui/core/Link';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Table from '@material-ui/core/Table';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableHead from '@material-ui/core/TableHead';\nimport TableRow from '@material-ui/core/TableRow';\nimport Title from \"./Title\"\n\n\nfunction preventDefault(event) {\n  event.preventDefault();\n}\n\nconst useStyles = makeStyles((theme) => ({\n  seeMore: {\n    marginTop: theme.spacing(3),\n  },\n}));\nconst CommunityTable = ({communities}) => {\n  const classes = useStyles();\n  console.log(communities)\n  return (\n    <React.Fragment>\n      <Title>Communities Descriptive Analytics</Title>\n      <Table size=\"small\">\n        <TableHead>\n          <TableRow>\n            <TableCell>Community Name</TableCell>\n            <TableCell>Date created</TableCell>\n            <TableCell>Number of listings</TableCell>\n            <TableCell>Average rent</TableCell>\n            <TableCell>Lowest rent</TableCell>\n            <TableCell>Highest rent</TableCell>\n          </TableRow>\n        </TableHead>\n        <TableBody>\n          {communities.map((community) => (\n            <TableRow key={community.id}>\n              <TableCell>{community.name}</TableCell>\n              <TableCell>{community.dateCreated}</TableCell>\n              <TableCell >{community.numberOfListings}</TableCell>\n              <TableCell >{community.averageRent}</TableCell>\n              <TableCell >{community.lowRent}</TableCell>\n              <TableCell >{community.highRent}</TableCell>\n            </TableRow>\n          ))}\n        </TableBody>\n      </Table>\n      {/* <div className={classes.seeMore}>\n        <Link color=\"primary\" href=\"#\" onClick={preventDefault}>\n          See more communities\n        </Link>\n      </div> */}\n    </React.Fragment>\n  );\n}\nexport default CommunityTable","import React from 'react';\nimport {List, ListItem, ListItemText, Typography} from '@material-ui/core';\nimport Title from \"./Title\"\n\nclass HighLevelList extends React.Component{\n    constructor(props){\n        super(props)\n        this.state = {\n            highLevelData: [],\n            isLoaded: false\n        }\n    }\n    componentDidMount(){\n        fetch('http://34.70.95.142:8080/highLevelData')\n              .then(response => response.json())\n              .then(json => this.setState({\n                  highLevelData: json,\n                  isLoaded: true\n              }));\n      }\n    render(){\n        if(this.state.isLoaded){\n            return(\n                <div>\n                    <Title>At a high level</Title>\n                    <List>\n                        <ListItem>\n                        <ListItemText primary={\"Number of Communities:\"} />\n                        {this.state.highLevelData.numberOfCommunities}\n                        </ListItem>\n                        <ListItem>\n                        <ListItemText primary=\"Total number of listings:\" />\n                        {this.state.highLevelData.totalNumberOfListings}\n                        </ListItem>\n                        <ListItem>\n                        <ListItemText primary=\"Total registered users:\" />\n                        {this.state.highLevelData.totalRegisteredUsers}\n                        </ListItem>\n                        <ListItem>\n                        <ListItemText primary=\"Total page views:\" />\n                        {this.state.highLevelData.totalPageViews}\n                        </ListItem>\n                    </List>\n                </div>\n            );\n        } else {\n            return(\n                <div>\n                <Title>At a high level</Title>\n                <List>loading...</List>\n            </div>\n            );\n        }\n    }\n}\nexport default HighLevelList\n\n","import React from 'react';\nimport clsx from 'clsx';\nimport { makeStyles } from '@material-ui/core/styles';\nimport CssBaseline from '@material-ui/core/CssBaseline';\nimport Drawer from '@material-ui/core/Drawer';\nimport Box from '@material-ui/core/Box';\nimport AppBar from '@material-ui/core/AppBar';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport {List, ListItem, ListItemText} from '@material-ui/core';\nimport Typography from '@material-ui/core/Typography';\nimport Divider from '@material-ui/core/Divider';\nimport IconButton from '@material-ui/core/IconButton';\nimport Badge from '@material-ui/core/Badge';\nimport Container from '@material-ui/core/Container';\nimport Grid from '@material-ui/core/Grid';\nimport Paper from '@material-ui/core/Paper';\nimport Link from '@material-ui/core/Link';\nimport MenuIcon from '@material-ui/icons/Menu';\nimport ChevronLeftIcon from '@material-ui/icons/ChevronLeft';\nimport NotificationsIcon from '@material-ui/icons/Notifications';\nimport Title from \"./Title\"\nimport UsersChart from \"./UsersChart\"\n// import { mainListItems, secondaryListItems } from './listItems';\n// import Chart from './Chart';\n// import Deposits from './Deposits';\n// import Orders from './Orders';\n\nimport CommunityTable from './CommunityTable'\nimport HighLevelList from './HighLevelList';\n\nconst drawerWidth = 240;\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    display: 'flex',\n  },\n  toolbar: {\n    paddingRight: 24, // keep right padding when drawer closed\n  },\n  toolbarIcon: {\n    display: 'flex',\n    alignItems: 'center',\n    justifyContent: 'flex-end',\n    padding: '0 8px',\n    ...theme.mixins.toolbar,\n  },\n  menuButton: {\n    marginRight: 36,\n  },\n  menuButtonHidden: {\n    display: 'none',\n  },\n  title: {\n    flexGrow: 1,\n  },\n  drawerPaper: {\n    position: 'relative',\n    whiteSpace: 'nowrap',\n    width: drawerWidth,\n    transition: theme.transitions.create('width', {\n      easing: theme.transitions.easing.sharp,\n      duration: theme.transitions.duration.enteringScreen,\n    }),\n  },\n  drawerPaperClose: {\n    overflowX: 'hidden',\n    transition: theme.transitions.create('width', {\n      easing: theme.transitions.easing.sharp,\n      duration: theme.transitions.duration.leavingScreen,\n    }),\n    width: theme.spacing(7),\n    [theme.breakpoints.up('sm')]: {\n      width: theme.spacing(9),\n    },\n  },\n  appBarSpacer: theme.mixins.toolbar,\n  content: {\n    flexGrow: 1,\n    height: '100vh',\n    overflow: 'auto',\n  },\n  container: {\n    paddingTop: theme.spacing(4),\n    paddingBottom: theme.spacing(4),\n  },\n  paper: {\n    padding: theme.spacing(4),\n    display: 'flex',\n    overflow: 'auto',\n    flexDirection: 'column',\n  },\n  fixedHeight: {\n    height: 280,\n  },\n}));\n\n const Dashboard = ({communities, highLevelData}) => {\n  console.log(communities)\n  const classes = useStyles();\n  const [open, setOpen] = React.useState(true);\n  const handleDrawerOpen = () => {\n    setOpen(true);\n  };\n  const handleDrawerClose = () => {\n    setOpen(false);\n  };\n  const fixedHeightPaper = clsx(classes.paper, classes.fixedHeight);\n  \n  return (\n    <div className={classes.root}>\n      <CssBaseline />\n      <AppBar position=\"absolute\" className={clsx(classes.appBar)}>\n        <Toolbar className={classes.toolbar}>\n          <Typography component=\"h1\" variant=\"h6\" color=\"inherit\" noWrap className={classes.title}>\n            Analytics - housing.community\n          </Typography>\n        </Toolbar>\n      </AppBar>\n      <main className={classes.content}>\n        <div className={classes.appBarSpacer} />\n        <Container maxWidth=\"lg\" className={classes.container}>\n          <Grid container spacing={2}>\n            <Grid item xs={12} md={5} lg={5}>\n              <Paper className={fixedHeightPaper}>\n                <HighLevelList></HighLevelList>\n              </Paper>\n            </Grid>\n            <Grid item xs={12} md={6} lg={7}>\n              <Paper className={fixedHeightPaper}>\n                <UsersChart></UsersChart>\n              </Paper>\n            </Grid>\n            <Grid item xs={12}>\n              <Paper className={classes.paper}>\n                <CommunityTable communities={communities}></CommunityTable>\n              </Paper>\n            </Grid>\n          </Grid>\n        </Container>\n      </main>\n    </div>\n  );\n}\nexport default Dashboard","import React, { Component } from 'react';\nimport logo from './logo.svg';\nimport {BrowserRouter, Route, Switch} from \"react-router-dom\";\nimport './App.css';\nimport Title from './Title';\nimport CommunityData from './CommunityData';\nimport WorkingTest from './WorkingTest';\nimport Dashboard from './Components/Dashboard';\n// import Dashboard from './Dashboard';\n\n\nclass App extends Component {\n  constructor(props){\n        super(props)\n        this.state = {\n            communities:[],\n            isLoaded:false\n        }\n  }\n\n  componentDidMount(){\n    fetch('http://34.70.95.142:8080/communities')\n          .then(response => response.json())\n          .then(json => this.setState({\n              communities: json,\n              isLoaded: true\n          }));\n  }\n  render(){\n    let {isLoaded, communities} = this.state\n    console.log(this.state);\n    if(isLoaded){\n      return (\n        <div className=\"App\">\n          <BrowserRouter>\n            <Switch>\n              <Route path=\"/\" component={()=><Dashboard communities={communities}></Dashboard>} exact />\n            </Switch> \n          </BrowserRouter>\n        </div>\n      );\n    } else {\n      return (\n        <div className=\"App\">\n        <div>Loading community data...</div>\n          {/* <BrowserRouter>\n            <Switch>\n              <Route path=\"/\" component={WorkingTest} exact />\n              <Route path=\"/dashboard\" component={Dashboard} exact />\n            </Switch>\n          </BrowserRouter> */}\n        </div>\n      );\n    }\n  }\n}\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}